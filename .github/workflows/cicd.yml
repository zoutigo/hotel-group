name: Full CI process for Symfony 5 / React

on: [push]

jobs:

  backend :
    name: Running functional and unit test
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4-apache','8']

    steps: 
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      ## https://github.com/actions/checkout (official)
        - name: Checkout
          uses: actions/checkout@v2

       ## https://github.com/shivammathur/setup-php (community)
        - name: Setup PHP, extensions and composer with shivammathur/setup-php
          uses: shivammathur/setup-php@v2
          with:
            php-version: ${{ matrix.php-versions }}
            extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, mysqli
          env:
            update: true

        - name: Check PHP Version
          run: php -v

      ## —— Php Coding standards ✨ ————————————————————————————————————————————————
        - name: Coding standards checks (php_codesniffer + php-cs-fixer)
          run: make cs
          if: matrix.php-versions == '8.0'

      ## —— Composer 🧙‍️ —————————————————————————————————————————————————————————
        - name: Validate composer.json and composer.lock
          run: composer validate

        - name: Get composer cache directory
          id: composer-cache
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        - name: Cache composer dependencies
          uses: actions/cache@v1
          with:
            path: ${{ steps.composer-cache.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            restore-keys: ${{ runner.os }}-composer-

        - name: Install Composer dependencies
          run: composer install --no-progress --prefer-dist --optimize-autoloader

        - run: composer require symfony/runtime 